// Code generated by ent, DO NOT EDIT.

package service

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the service type in the database.
	Label = "service"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldService holds the string denoting the service field in the database.
	FieldService = "service"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeUserID holds the string denoting the user_id edge name in mutations.
	EdgeUserID = "user_id"
	// Table holds the table name of the service in the database.
	Table = "services"
	// UserIDTable is the table that holds the user_id relation/edge.
	UserIDTable = "services"
	// UserIDInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserIDInverseTable = "users"
	// UserIDColumn is the table column denoting the user_id relation/edge.
	UserIDColumn = "user_uuid"
)

// Columns holds all SQL columns for service fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldService,
	FieldURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "services"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_uuid",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
)

// Service defines the type for the "service" enum field.
type Service string

// Service values.
const (
	ServiceTwitter Service = "twitter"
	ServiceYoutube Service = "youtube"
	ServiceFanbox  Service = "fanbox"
)

func (s Service) String() string {
	return string(s)
}

// ServiceValidator is a validator for the "service" field enum values. It is called by the builders before save.
func ServiceValidator(s Service) error {
	switch s {
	case ServiceTwitter, ServiceYoutube, ServiceFanbox:
		return nil
	default:
		return fmt.Errorf("service: invalid enum value for service field: %q", s)
	}
}
